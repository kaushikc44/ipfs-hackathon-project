// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class fileUploaded extends ethereum.Event {
  get params(): fileUploaded__Params {
    return new fileUploaded__Params(this);
  }
}

export class fileUploaded__Params {
  _event: fileUploaded;

  constructor(event: fileUploaded) {
    this._event = event;
  }

  get cid(): string {
    return this._event.parameters[0].value.toString();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get fileType(): string {
    return this._event.parameters[2].value.toString();
  }

  get name(): string {
    return this._event.parameters[3].value.toString();
  }

  get createdAt(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get updatedAt(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class Cid__getFilesResultValue0Struct extends ethereum.Tuple {
  get fileType(): string {
    return this[0].toString();
  }

  get name(): string {
    return this[1].toString();
  }

  get cid(): string {
    return this[2].toString();
  }

  get isUploaded(): boolean {
    return this[3].toBoolean();
  }

  get createdAt(): BigInt {
    return this[4].toBigInt();
  }

  get updatedAt(): BigInt {
    return this[5].toBigInt();
  }
}

export class Cid extends ethereum.SmartContract {
  static bind(address: Address): Cid {
    return new Cid("Cid", address);
  }

  getFiles(): Array<Cid__getFilesResultValue0Struct> {
    let result = super.call(
      "getFiles",
      "getFiles():((string,string,string,bool,uint256,uint256)[])",
      []
    );

    return result[0].toTupleArray<Cid__getFilesResultValue0Struct>();
  }

  try_getFiles(): ethereum.CallResult<Array<Cid__getFilesResultValue0Struct>> {
    let result = super.tryCall(
      "getFiles",
      "getFiles():((string,string,string,bool,uint256,uint256)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Cid__getFilesResultValue0Struct>()
    );
  }
}

export class AddFileCall extends ethereum.Call {
  get inputs(): AddFileCall__Inputs {
    return new AddFileCall__Inputs(this);
  }

  get outputs(): AddFileCall__Outputs {
    return new AddFileCall__Outputs(this);
  }
}

export class AddFileCall__Inputs {
  _call: AddFileCall;

  constructor(call: AddFileCall) {
    this._call = call;
  }

  get _fileType(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _cid(): string {
    return this._call.inputValues[1].value.toString();
  }

  get name(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class AddFileCall__Outputs {
  _call: AddFileCall;

  constructor(call: AddFileCall) {
    this._call = call;
  }
}

export class UpdateIsUploadedCall extends ethereum.Call {
  get inputs(): UpdateIsUploadedCall__Inputs {
    return new UpdateIsUploadedCall__Inputs(this);
  }

  get outputs(): UpdateIsUploadedCall__Outputs {
    return new UpdateIsUploadedCall__Outputs(this);
  }
}

export class UpdateIsUploadedCall__Inputs {
  _call: UpdateIsUploadedCall;

  constructor(call: UpdateIsUploadedCall) {
    this._call = call;
  }

  get _cid(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _success(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class UpdateIsUploadedCall__Outputs {
  _call: UpdateIsUploadedCall;

  constructor(call: UpdateIsUploadedCall) {
    this._call = call;
  }
}
